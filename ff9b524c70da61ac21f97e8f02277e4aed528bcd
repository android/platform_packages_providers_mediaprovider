{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e454a2_ca82a59e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "Can you please add more detail about what the implementation does? From a design perspective, like the choice of thread_local logging to improve performance and the general overview of how the components interact",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 61
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77605e40_ef1fa1cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "This is my first pass. \n\nOverall, I like the approach of reducing contention during the fuse ops but in general I feel like the change could be simpler/clearer with more descriptive names/comments. I\u0027ve left feedback inline in places where I think we could simplify/avoid unnecessary classes\n\nAlso could you please add some tests?\n\nThanks",
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c726576b_6b7c9184",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "2021",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42639ba4_9a581b80",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "More descriptive names or comments? \n\nkCollectDuration of ?\nkCollectCount of ?\nkCollectMaxUidCount ?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 48,
        "endChar": 37
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b7bcdbc_202e86bb",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "\u0027enum class\u0027 to reduce scope of enum fields",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 4
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b218b7ac_d1dc5437",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "Can uid be a field in this so we don\u0027t need a uid_pair_t? and while merging, can you assert that uid field matches",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a28e0ee_2c53d32a",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1887447
      },
      "writtenOn": "2021-07-14T07:30:23Z",
      "side": 1,
      "message": "If PerUidIOCount has a uid field, that looks good but we also need to think of the hash table \u003cK, V\u003e \u003d \u003cuid, PerUidIOCount\u003e.\n using uid_map_t \u003d std::unordered_map\u003cuid_t, PerUidIOCount\u003e;\n \nThe V of hash table will get to include the K (uid), so I think this seems to be a little bit weird.\nHow do you think about this ?",
      "parentUuid": "b218b7ac_d1dc5437",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3449919_cd82c377",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "Maybe FlushUidCount? Getter is odd since we drain the count",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 45
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e38b2e30_bd450ed7",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "Do we really need this fields? Why not just io_mon-\u003eregisterPerThreadIO etc? \n\nAnd then get rid of SetCallback() and func1 and func2. So simplifying PerThreadIO",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 131,
        "endChar": 28
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9df8c131_b54bd8c0",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "Do you need this class, maybe you can just define the std::queue directly in IOMonitor?",
      "range": {
        "startLine": 177,
        "startChar": 6,
        "endLine": 177,
        "endChar": 17
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387dbd22_e82c2ee4",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1622142
      },
      "writtenOn": "2021-07-14T07:35:47Z",
      "side": 1,
      "message": "We need to have this class to control the max count of IOStats.\nTo get the iostat history, we need to have several iostats not only the lastest.\nFor now patch, we can have 5 iostats. It can leave the history of 15 mins at least. (3mins for each iostat)",
      "parentUuid": "9df8c131_b54bd8c0",
      "range": {
        "startLine": 177,
        "startChar": 6,
        "endLine": 177,
        "endChar": 17
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73aa51e9_e87f3878",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 247,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "nit: CollectIoStats, CollectIoStatsFromFuseThreads and GetAndResetIoStats",
      "range": {
        "startLine": 247,
        "startChar": 9,
        "endLine": 247,
        "endChar": 18
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a05c3f2_6f49d1b7",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "This sleep can hold up the destruction of the IOMonitor for 3mins?",
      "range": {
        "startLine": 251,
        "startChar": 12,
        "endLine": 251,
        "endChar": 58
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "100966fa_9ec58ab1",
        "filename": "jni/IOMonitor.h",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "nit: why not uid_map_ ?",
      "range": {
        "startLine": 294,
        "startChar": 14,
        "endLine": 294,
        "endChar": 25
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "193cf6b5_446a7dbc",
        "filename": "jni/com_android_providers_media_FuseDaemon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "nit: maybe call this io_stats instead? ditto other places where you used fuseLog/fuse_log",
      "range": {
        "startLine": 104,
        "startChar": 55,
        "endLine": 104,
        "endChar": 58
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb9ec86_46ca67df",
        "filename": "src/com/android/providers/media/MediaProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 7804,
      "author": {
        "id": 1346941
      },
      "writtenOn": "2021-07-08T13:42:12Z",
      "side": 1,
      "message": "nit: dumpFuseIoStats",
      "range": {
        "startLine": 7804,
        "startChar": 35,
        "endLine": 7804,
        "endChar": 48
      },
      "revId": "ff9b524c70da61ac21f97e8f02277e4aed528bcd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}